syntax = "proto3";
package gm_game.gmgame;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gmgame/gmgame/params.proto";
import "gmgame/gmgame/nft.proto";
import "gmgame/gmgame/scores.proto";
// this line is used by starport scaffolding # 1

option go_package = "gm_game/x/gmgame/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/gm_game/gmgame/params";
  }
  // Queries a Nft by index.
	rpc Nft(QueryGetNftRequest) returns (QueryGetNftResponse) {
		option (google.api.http).get = "/gm_game/gmgame/nft/{index}";
	}

	// Queries a list of Nft items.
	rpc NftAll(QueryAllNftRequest) returns (QueryAllNftResponse) {
		option (google.api.http).get = "/gm_game/gmgame/nft";
	}

// Queries a Scores by index.
	rpc Scores(QueryGetScoresRequest) returns (QueryGetScoresResponse) {
		option (google.api.http).get = "/gm_game/gmgame/scores/{index}";
	}

	// Queries a list of Scores items.
	rpc ScoresAll(QueryAllScoresRequest) returns (QueryAllScoresResponse) {
		option (google.api.http).get = "/gm_game/gmgame/scores";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetNftRequest {
	  string index = 1;

}

message QueryGetNftResponse {
	Nft nft = 1 [(gogoproto.nullable) = false];
}

message QueryAllNftRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllNftResponse {
	repeated Nft nft = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetScoresRequest {
	  string index = 1;

}

message QueryGetScoresResponse {
	Scores scores = 1 [(gogoproto.nullable) = false];
}

message QueryAllScoresRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllScoresResponse {
	repeated Scores scores = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
